  n1j: ansi_n1_and_exclamation_with_jis {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_N1_WITH_JIS";
    #binding-cells = <0>;
    bindings = <&kp EXCLAMATION>, <&kp N1>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  n2j: ansi_n2_and_left_bracket_with_jis {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_N2_WITH_JIS";
    #binding-cells = <0>;
    bindings = <&kp RIGHT_BRACKET>, <&kp N2>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  n3j: ansi_n3_and_left_brace_with_jis {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_N3_WITH_JIS";
    #binding-cells = <0>;
    bindings = <&kp RIGHT_BRACE>, <&kp N3>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  n4j: ansi_n4_and_left_parenthesis_with_jis {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_N4_WITH_JIS";
    #binding-cells = <0>;
    bindings = <&kp ASTERISK>, <&kp N4>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  n5j: ansi_n5_and_percent_with_jis {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_N5_WITH_JIS";
    #binding-cells = <0>;
    bindings = <&kp PERCENT>, <&kp N5>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  n6j: ansi_n6_and_ampersand_with_jis {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_N6_WITH_JIS";
    #binding-cells = <0>;
    bindings = <&kp CARET>, <&kp N6>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  n7j: ansi_n7_and_right_parenthesis_with_jis {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_N7_WITH_JIS";
    #binding-cells = <0>;
    bindings = <&kp LEFT_PARENTHESIS>, <&kp N7>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  n8j: ansi_n8_and_right_brace_with_jis {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_N8_WITH_JIS";
    #binding-cells = <0>;
    bindings = <&kp PIPE>, <&kp N8>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  n9j: ansi_n9_and_right_bracket_with_jis {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_N9_WITH_JIS";
    #binding-cells = <0>;
    bindings = <&kp BACKSLASH>, <&kp N9>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  n0j: ansi_n0_and_asterisk_with_jis {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_N0_WITH_JIS";
    #binding-cells = <0>;
    bindings = <&kp DOUBLE_QUOTES>, <&kp N0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  gtj: ansi_grave_and_tilde_with_jis {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_GRAVE_WITH_JIS";
    #binding-cells = <0>;
    bindings = <&kp LEFT_BRACE>, <&kp PLUS>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  epj: ansi_equal_and_plus_with_jis {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_EQUAL_WITH_JIS";
    #binding-cells = <0>;
    bindings = <&kp UNDERSCORE>, <&kp KP_PLUS>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  muj: ansi_minus_and_underscore_with_jis {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_MINUS_WITH_JIS";
    #binding-cells = <0>;
    bindings = <&kp MINUS>, <&kp LS(INT1)>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  bpj: ansi_backslash_and_pipe_with_jis {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_BACKSLASH_WITH_JIS";
    #binding-cells = <0>;
    bindings = <&kp INT3>, <&kp LS(INT3)>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  qdj: ansi_quote_and_doublequote_with_jis {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_QUOTE_WITH_JIS";
    #binding-cells = <0>;
    bindings = <&kp AMPERSAND>, <&kp AT>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  scj: ansi_semicolon_and_colon_with_jis {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_SEMICOLON_WITH_JIS";
    #binding-cells = <0>;
    bindings = <&kp SEMICOLON>, <&kp SINGLE_QUOTE>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  caj: ansi_caret_and_at_with_jis {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_CARET_WITH_JIS";
    #binding-cells = <0>;
    bindings = <&kp EQUAL>, <&kp LEFT_BRACKET>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  dhj: ansi_dollar_and_hash_with_jis {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_DOLLAR_WITH_JIS";
    #binding-cells = <0>;
    bindings = <&kp DOLLAR>, <&kp HASH>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  ahj: ansi_at_and_hash_with_jis {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_AT_WITH_JIS";
    #binding-cells = <0>;
    bindings = <&kp LEFT_BRACKET>, <&kp HASH>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  cdj: ansi_caret_and_dollar_with_jis {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_CARET_DOLLAR_WITH_JIS";
    #binding-cells = <0>;
    bindings = <&kp EQUAL>, <&kp DOLLAR>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };

  n1a: ansi_n1_and_exclamation {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_N1";
    #binding-cells = <0>;
    bindings = <&kp EXCLAMATION>, <&kp N1>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  n2a: ansi_n2_and_left_bracket {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_N2";
    #binding-cells = <0>;
    bindings = <&kp LEFT_BRACKET>, <&kp N2>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  n3a: ansi_n3_and_left_brace {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_N3";
    #binding-cells = <0>;
    bindings = <&kp LEFT_BRACE>, <&kp N3>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  n4a: ansi_n4_and_left_parenthesis {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_N4";
    #binding-cells = <0>;
    bindings = <&kp LEFT_PARENTHESIS>, <&kp N4>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  n5a: ansi_n5_and_percent {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_N5";
    #binding-cells = <0>;
    bindings = <&kp PERCENT>, <&kp N5>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  n6a: ansi_n6_and_ampersand {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_N6";
    #binding-cells = <0>;
    bindings = <&kp AMPERSAND>, <&kp N6>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  n7a: ansi_n7_and_right_parenthesis {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_N7";
    #binding-cells = <0>;
    bindings = <&kp RIGHT_PARENTHESIS>, <&kp N7>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  n8a: ansi_n8_and_right_brace {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_N8";
    #binding-cells = <0>;
    bindings = <&kp RIGHT_BRACE>, <&kp N8>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  n9a: ansi_n9_and_right_bracket {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_N9";
    #binding-cells = <0>;
    bindings = <&kp RIGHT_BRACKET>, <&kp N9>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  n0a: ansi_n0_and_asterisk {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_N0";
    #binding-cells = <0>;
    bindings = <&kp ASTERISK>, <&kp N0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  caa: ansi_caret_and_at {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_EXCLAMATION";
    #binding-cells = <0>;
    bindings = <&kp CARET>, <&kp AT>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  dha: ansi_dollar_and_hash {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_DOLLAR_HASH";
    #binding-cells = <0>;
    bindings = <&kp DOLLAR>, <&kp HASH>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  aha: ansi_at_and_hash {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_AT_HASH";
    #binding-cells = <0>;
    bindings = <&kp AT>, <&kp HASH>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  cda: ansi_caret_and_dollar {
    compatible = "zmk,behavior-mod-morph";
    label = "ANSI_CARET_DOLLAR";
    #binding-cells = <0>;
    bindings = <&kp CARET>, <&kp DOLLAR>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
